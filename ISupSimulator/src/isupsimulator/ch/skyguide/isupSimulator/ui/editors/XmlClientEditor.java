/*
 * SNMPMibEditor.java
 *
 * Created on 10 d√©c. 2010, 10:22:43
 */
package isupsimulator.ch.skyguide.isupSimulator.ui.editors;

import ch.skyguide.pvss.network.service.xml.TcpHost;
import ch.skyguide.pvss.network.service.xml.XmlClientService;
import isupsimulator.ch.skyguide.isupSimulator.ui.jtable.ListAdapter;
import isupsimulator.ch.skyguide.isupSimulator.ui.jtable.TableColumnDefinition;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author caronyn
 */
public final class XmlClientEditor extends Editor<XmlClientService> {

    // attributes
    TableColumnDefinition[] columnDefinitions = {
        new TableColumnDefinition("Host name") {

            @Override
            public Object getField(int rowIndex) {
                return datasource.getHost(rowIndex).getAddress();
            }

            @Override
            public void setField(int rowIndex, Object value) {
                datasource.getHost(rowIndex).setAddress(String.valueOf(value));
            }

            @Override
            public boolean isEditable() {
                return true;
            }
        },
        new TableColumnDefinition("port") {

            @Override
            public Object getField(int rowIndex) {
                return String.valueOf(datasource.getHost(rowIndex).getPort());
            }

            @Override
            public void setField(int rowIndex, Object value) {
                try {
                    datasource.getHost(rowIndex).setPort(Integer.valueOf((String) value));
                } catch (Exception ex) {
                }
            }

            @Override
            public boolean isEditable() {
                return true;
            }
        }
    };

    // methode implementation
    /**
     * Return if this is the appropriate editor.
     * @param type Type accepted.
     * @return Return true if it can edit the type.
     */
    @Override
    public boolean canEdit(Class type) {
        return XmlClientService.class.equals(type);
    }

    /**
     * Register the data change events.
     */
    @Override
    public void registerEvents() {
        registerLazyTextChangedEvent(nameTextField);
        registerLazyCheckBoxChangedEvent(KeepAliveCheck);

        // TODO une seul fois
        table.getModel().addTableModelListener(new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
                fireDataChangedEvent();
                TableColumnDefinition.adjustColumnWidth(table);
            }
        });
    }

    /**
     * From data model to view.
     */
    @Override
    public void displayDataModel() {
        // TODO ajouter les communities
        nameTextField.setText(datasource.getName());
        KeepAliveCheck.setSelected(datasource.isKeptAlive());

        // table
        table.setModel(new ListAdapter<TcpHost>(columnDefinitions, datasource.getHosts()) {

            @Override
            public TcpHost getElementInstance() {
                return new TcpHost("Host", 5000);
            }
        });
        TableColumnDefinition.applyEditors(table, columnDefinitions);
        TableColumnDefinition.adjustColumnWidth(table);
    }

    /**
     * From view to data model.
     */
    public void storeDataModel() {
        datasource.setName(nameTextField.getText());
        datasource.setKeepAlive(KeepAliveCheck.isSelected());
    }

    // constructor
    /** Creates new form SNMPMibEditor */
    public XmlClientEditor() {
        initComponents();
        tableManager.setTable(table);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        tableManager = new isupsimulator.ch.skyguide.isupSimulator.ui.editors.component.TableManager();
        KeepAliveCheck = new javax.swing.JCheckBox();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(isupsimulator.ISupSimulatorApp.class).getContext().getResourceMap(XmlClientEditor.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        nameTextField.setName("nameTextField"); // NOI18N

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setCellSelectionEnabled(true);
        table.setName("table"); // NOI18N
        jScrollPane1.setViewportView(table);

        tableManager.setName("tableManager"); // NOI18N

        KeepAliveCheck.setText(resourceMap.getString("Keep alive.text")); // NOI18N
        KeepAliveCheck.setActionCommand(resourceMap.getString("Keep alive.actionCommand")); // NOI18N
        KeepAliveCheck.setDoubleBuffered(true);
        KeepAliveCheck.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        KeepAliveCheck.setName("Keep alive"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableManager, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(KeepAliveCheck)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KeepAliveCheck))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableManager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        KeepAliveCheck.getAccessibleContext().setAccessibleName(resourceMap.getString("jCheckBox1.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox KeepAliveCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTable table;
    private isupsimulator.ch.skyguide.isupSimulator.ui.editors.component.TableManager tableManager;
    // End of variables declaration//GEN-END:variables
}
